'#big oscilloscope


type ITEM_DATA 
    as zstring ptr someText2
    as Vector2D vec
    as integer shouldDraw
    AS DOUBLE thetime
end type

parameter "flavor", integer
signal $goDeep

'---------------------------------

function _init()
    data.someText2 = 0
    data.shouldDraw = 0
end function


'---------------------------------

function _flush()

    if data.someText2 then deallocate(data.someText2)

        
        
    /'
        strip these comments
        'asdasdads
        /'
        "asdasd"
    '/
    
    'nice work
    
end function


'---------------------------------


function _draw()
    dim as integer flavor
    if data.shouldDraw then
        getParameter(flavor, "flavor")

        line (p.x, p.y)-(p.x+size.x, p.y+size.y), iif(flavor, &hff0000, &h0000ff), B
        draw string (p.x, p.y), str(data.thetime), &hff7f00
    
    end if
end function

'----------------------------------

function _drawOverlay()

end function

'----------------------------------

function _run()
    dim as ValueSet vset 'append the word "object" to the start of "ValueSet"
    dim as string tempVal
    if int(rnd * 1200) = 0 then throw($goDeep, "thisParameterDoesntExist = 'hi ho'")
    
    
    queryValues(vset, "testvalue")
    if vset.getValue_N() > 0 then vset.getValue(tempVal, 0)
   
    
    data.thetime = val(tempVal)
end function

'-----------------------------------

slot $playsoundTest(playtimes as integer)
    for i = 0 to playtimes - 1
        if i = 0 then
            link.soundeffects_ptr->playSound(SND_ALARM)
        elseif i = 1 then
            link.soundeffects_ptr->playSound(SND_THROW)       
        end if
    next i
end slot

slot $draw2Params(param1 as string, param2 as Vector2D)
    dim as string someText
    
    data.shouldDraw = 1
    someText = allocate(len(param1) + 1)
    *someText = param1
    data.someText2 = someText
    data.vec = param2
   
end slot


