'#big oscilloscope


type ITEM_DATA 
    as zstring ptr someText2
    as Vector2D vec
    as integer shouldDraw
    AS DOUBLE thetime
    as integer countDown
    as string safeText
    as Vector2D tPos
end type

parameter "flavor", integer
signal $goDeep

publish value "myValue7", Vector2D, Rectangle2D(Vector2D(0,0), Vector2D(64, 32))



function bogus(d as integer) as integer
    return d + 4

end function

'---------------------------------

function _init()
    dim as integer flavor
    data.someText2 = 0
    data.shouldDraw = 0
    data.CountDown = 60
    data.safeText = ""
    getParameter(flavor, "flavor")
    setValue(Vector2D(-1, flavor), "myvalue7")
end function


'---------------------------------

function _flush()

    if data.someText2 then deallocate(data.someText2)
    data.safeText = ""
        
        
    /'
        strip these comments
        'asdasdads
        /'
        "asdasd"
    '/
    
    'nice work
    
end function


'---------------------------------


function _draw()
    dim as integer flavor
    if data.shouldDraw then
        getParameter(flavor, "flavor")

        line scnbuff, (p.x, p.y)-(p.x+size.x, p.y+size.y), iif(flavor, &hff0000, &h0000ff), B
        draw string scnbuff, (p.x, p.y), str(data.thetime) + ", " + str(bogus(2)) + ", " + data.safeText, &hff7f00
    
    end if
    
    line scnbuff, (data.tpos.x, data.tpos.y)-(data.tpos.x + 64, data.tpos.y + 32), &h7fff00, B
end function

'----------------------------------

function _drawOverlay()

end function

'----------------------------------

function _run()
    dim as ValueSet vset1, vset2 
    dim as SlotSet sset
    dim as string tempVal
    dim as double cv
    if data.countDown = 0 then 
        throw($goDeep, "thisParameterDoesntExist = 'hi ho', paramA = 23, paramB = 'cheeze', paramC = (12.2, 11)")
    end if
    
    queryValues(vset1, "testValue")', Polygon2D({Vector2D(10, 10), Vector2D(20, 30), Vector2D(0, 30)}))
    
   
    vset1.getValue(data.safeText, 0)
    
    queryValues(vset2, "circleAngle")
    vset2.getValue(cv, 0)
    
    data.tPos = p + Vector2D(0, sin(cv)) * 100
    
    setTargetValueOffset("myValue7", data.tpos)
    
    
    
    data.CountDown -= 1
    
    data.thetime = 3

end function

'-----------------------------------

slot $playsoundTest(playtimes as integer)
    dim as integer i
    print playTimes
    beep
    for i = 0 to playtimes - 1
        if i = 0 then
            link.soundeffects_ptr->playSound(SND_ALARM)
        elseif i = 1 then
            link.soundeffects_ptr->playSound(SND_THROW)       
        end if
    next i
end slot

slot $draw2Params(param1 as string, param2 as Vector2D)
    dim as string someText
    
    print "draw2Params"
    beep
    data.shouldDraw = 1
    someText = param1
    *(data.someText2) = someText
    data.vec = param2
   
end slot


