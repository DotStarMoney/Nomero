'#magic couch

persistence item

type ITEM_DATA 
    as TinyDynamic ptr platform
    as integer platform_i
    as integer lastState
    as vector2D elevatorPos
end type

parameter "startSide", integer

'---------------------------------

function _init()
    dim as TinyDynamic_BASICPATH pathData
    dim as Vector2D path(0 to 1)
    dim as Vector2D shape(0 to 4)
    
    data.lastState = 0
    
    path(0) = p 
    path(1) = p + Vector2D(size.x - 96, 0)
    
    pathData.pathPointsN = 2
    pathData.pathPoints = @(path(0))
    pathData.type_ = TOGGLE
    pathData.speed = 60
    pathData.segment = 0    
    pathData.segment_pos = 0
        
    data.platform = new TinyDynamic(DYNA_BASICPATH)
    data.platform->importParams(@pathData)
    
    shape(0) = Vector2D(0,32)
    shape(1) = Vector2D(96, 32)
    shape(2) = Vector2D(96, 48)
    shape(3) = Vector2D(0, 48)
    shape(4) = shape(0)
    data.platform->importShape(@(shape(0)), 5)
    data.platform->calcBB()
    data.platform->activate()
    
    data.platform_i = link.tinyspace_ptr->addDynamic(data.platform)
    
    CREATE_ANIMS(1)
    anims[0].load(MEDIA_PATH + "couch.txt")

end function

'---------------------------------

function _flush()
    link.tinyspace_ptr->removeDynamic(data.platform_i)  
    delete(data.platform)
end function

'---------------------------------

function _draw(scnbuff as integer ptr)
    PREP_LIT_ANIMATION()

    DRAW_LIT_ANIMATION(0, data.elevatorPos.x, data.elevatorPos.y - 32, 0, 0)

end function

'----------------------------------

function _drawOverlay(scnbuff as integer ptr)

    
end function

'----------------------------------

function _run(t as double)
    data.elevatorPos = data.platform->getPointP(0)
    
    
end function

'-----------------------------------

slot $move()
    data.platform->togglePath()
end slot

function _serialize_in()
    retrieve(data.lastState)
    retrieve(data.elevatorPos)
    data.platform = new TinyDynamic()
    data.platform->serialize_in(binaryData_)
    data.platform_i = link.tinyspace_ptr->addDynamic(data.platform)
end function

'-----------------------------------

function _serialize_out()
    store(data.lastState)
    store(data.elevatorPos)
    data.platform->serialize_out(binaryData_)
end function

