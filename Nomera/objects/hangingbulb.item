'#hangingbulb

persistence item

type ITEM_DATA
    as integer state
end type

parameter "state", integer
parameter "noSpecular", integer

'---------------------------------

function _init()
    dim as integer i, noSpec
    
    getParameter(data.state, "state")
    getParameter(noSpec, "noSpecular")

    
    if noSpec = 0 then
        PREP_LIGHTS(MEDIA_PATH + "Lights\LightOrange_Diffuse.txt", MEDIA_PATH + "Lights\LightOrange_Specular.txt", 1)  
    else
        PREP_LIGHTS(MEDIA_PATH + "Lights\LightOrange_Diffuse.txt", MEDIA_PATH + "Lights\black_specular.txt", 1)  
    end if
    
    CREATE_ANIMS(1)
    anims[0].load(MEDIA_PATH + "bulb.txt")
    
 
end function

'---------------------------------

function _flush()

end function

'---------------------------------

function _draw(scnbuff as integer ptr)
    PREP_LIT_ANIMATION()
    
    if data.state = 0 then
        DRAW_LIT_ANIMATION(0, p.x, p.y, 0, 0)
    else
        anims[0].drawAnimation(scnbuff, p.x, p.y)
    end if

end function

'----------------------------------

function _drawOverlay(scnbuff as integer ptr)

end function

'----------------------------------

function _run(t as double)

    if data.state = 1 then
        lightState = 1
        anims[0].hardSwitch(1)
    else
        lightState = 0
        anims[0].hardSwitch(0)
    end if
    light.texture.x = p.x + size.x * 0.5
    light.texture.y = p.y + size.y * 0.2
    light.shaded.x = light.texture.x
    light.shaded.y = light.texture.y  
end function

'-----------------------------------

slot $toggle()
    data.state = 1 - data.state
end slot

'-----------------------------------
function _serialize_in()
    retrieve(data.state)
end function

'-----------------------------------

function _serialize_out()
    store(data.state)
end function
