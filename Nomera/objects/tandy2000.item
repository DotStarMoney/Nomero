'#tandy2000

type notItemData_t
    as integer      temp
    as integer ptr  test2
end type

type ITEM_DATA 
    as integer testInt
    as double  testDbl
    as single  testSng
    as Vector2D   alright
    as integer checkIt
    as notItemData_t cheese
    as integer col
    as integer randOffset
end type

const as integer buhnz = 4

parameter "test vector2d", Vector2D


signal   $justTrees
signal $notImportant


publish slot "my only slot", $myOnlySlot, Polygon2D({Vector2D(3,10), Vector2D(43, 40), Vector2D(-10, 30)}) 
publish value "TESTVALUe", string

'---------------------------------

function _init()
    dim as integer rightoh
    
    data.testSng = 4.2
    
    data.cheese.test2 = 0
    data.cheese.temp = 2
    data.checkIt = 0
    data.col = &hff0000
    rightOh = buhnz
    data.randOffset = int(rnd * 100)

    setValue("its me", "TESTVALUE")
    print "RIGhTOH!!!"; rightOh
    sleep
    
end function


'---------------------------------

function _flush()
    'nothing here but us trees!
    print "nothing here but us trees!"
    beep
    sleep

end function


'---------------------------------
function idontdonothin()
    dim as integer t
    dim as Shape2D randomShape
    t = 3
    randomShape = Polygon2D({Vector2D(0,10), Vector2D(40, 40), Vector2D(-10, 50)})

end function

function _draw(scnbuff as integer ptr)
    
    line scnbuff, (p.x, p.y)-(p.x+size.x, p.y+size.y), data.col, BF

end function

'----------------------------------

function _drawOverlay(scnbuff as integer ptr)
   
    
    LOCK_TO_SCREEN()
        circle scnbuff, (10, 10), 10, &h00ff00
        draw string scnbuff, (10, 30+data.randOffset), str(data.alright)
        if data.checkIt = 4 then draw string scnbuff, (10, 18), "EUREKA"
    UNLOCK_TO_SCREEN()

end function

'----------------------------------

function _run(t as double)
    
    
    getParameter(data.alright, "test vector2D")
    setValue(str(timer), "testvalue")
    
end function

'-----------------------------------

/'
    sub Item.ITEM_TANDY2000_SLOT_MYONLYSLOT_SUB(pvPair() as _Item_slotValuePair_t)
        dim aValue as integer
        matchParameter(aValue, "AVALUE", pvPair)
        
        dim as integer localVariable
        data_->checkIt = 1
    
    end sub

'/


slot $myOnlySlot(aValue as integer)
    dim as integer localVariable

    data.checkIt += 1
    

end slot

