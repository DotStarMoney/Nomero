'#elevator

'sample script showing usage of object compiler. (must start with #OBJECT NAME
'where OBJECT NAME is as it would appear in the namesTypes table)


'added to header if not in function or signal/slot block

type _OBJECT_DATA_ 'assigned and allocated to "data" if present
    as integer okay
    as double yes
    
end type
type test_type

    as integer temp
    as string test2
end type

const buhnz as integer = 4



'---------------------------------

function _init() 'comment
    'added as case in init



end function


'---------------------------------

function _flush()
    'added to flush

end function


'---------------------------------


function _draw()
    'added to draw

end function

'----------------------------------

function _drawOverlay()
    'added to draw top

end function

'----------------------------------

function _run()
    'added to process

    '''''' demonstration of throwing signals ''''''''
    throw($reachedTop("timeTaken = 20"))
    
    queryTargets(targetSet, "SHOCK TARGET", Circle2D(Vector2D(p.x, p.y), 10))
    queryKeys(keySet, "FRY ELECTRONICS")
    
    keySet.throw("severity = 10")
    ''''''''''''''''''''''''''''''''''''''''''''''''

    'return 0 to keep, 1 to destroy
end function

'-----------------------------------

signal $reachedTop(timeTaken as integer)
signal $reachedBottom(timeTaken as integer)

slot $breakDown(severity as integer)


end slot

publish target $shockTarget("SHOCK TARGET", Square2D(Vector2D(0, 0), Vector2D(size.x, size.y)), $breakDown) 'contained in hash table so objects can access these god forbid
publish key $fryElevator("FRY ELECTRONICS", $breakDown)

